language: node_js

node_js:
    - "stable"
    - "14"
    - "12"
    - "10"
    - "8"
    - "6"
    - "4"

sudo: false

env:
  - MONGODB_VERSION=2.4.14 MONGODB_DRIVER_VERSION=2.x.x
  - MONGODB_VERSION=3.6.23 MONGODB_DRIVER_VERSION=2.x.x
  - MONGODB_VERSION=4.4.6 MONGODB_DRIVER_VERSION=3.x.x

before_script:
  - wget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-${MONGODB_VERSION}.tgz -O /tmp/mongodb.tgz
  - tar -xvf /tmp/mongodb.tgz
  - mkdir /tmp/data
  - ${PWD}/mongodb-linux-x86_64-${MONGODB_VERSION}/bin/mongod --dbpath /tmp/data &> /dev/null &
  - ${PWD}/mongodb-linux-x86_64-${MONGODB_VERSION}/bin/mongod --version
  - until nc -z localhost 27017; do echo Waiting for MongoDB; sleep 1; done
  - npm install mongodb@${MONGODB_DRIVER_VERSION}

script:
    - >
      nodeVersionMajor=`node -e "console.log(process.versions.node.split('.')[0])"`;

      if [ $nodeVersionMajor -ge 10 ]; then
        npm run lint
      else
        echo "*** Do not lint for node.js < 10 builds ($nodeVersionMajor)";
      fi;

    - >
      nodeVersionMajor=`node -e "console.log(process.versions.node.split('.')[0])"`;

      if [ $nodeVersionMajor -gt 4 ]; then
        npm test;
      else
        npm run testWithoutBail;
      fi;

    - >
      nodeVersionMajor=`node -e "console.log(process.versions.node.split('.')[0])"`;

      if [ $nodeVersionMajor -eq 12 ]; then
        npm run makeCodeCoverageSummaryReport;
        npm run makeCodeCoverageDetailReport;
        coveralls < coverage/lcov.info;
      else
        echo "*** Do not make coverage reports for non node.js 12 builds ($nodeVersionMajor)";
      fi;
